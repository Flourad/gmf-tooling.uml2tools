/*
 * Copyright (c) 2007 Borland Software Corporation
 * 
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Tatiana Fesenko (Borland) - initial API and implementation
 */

«IMPORT "http://www.eclipse.org/gmf/2006/GenModel"»
«IMPORT "http://www.eclipse.org/emf/2002/Ecore"»
«IMPORT "http://www.eclipse.org/emf/2002/GenModel"»
«IMPORT "http://www.eclipse.org/uml2/diagram/gmfgenext/DiagramFigure/1.0"»

«EXTENSION xpt::actions::i18n»
«EXTENSION xpt::actions::Utils»

«DEFINE ChangeNotationAction(Integer newVID) FOR gmfgen::GenTopLevelNode»
package «EXPAND packageName»;

«EXPAND xpt::Common::generatedClassComment»
public class «EXPAND className(newVID)» extends org.eclipse.uml2.diagram.common.actions.ChangeNotationAction {

	public static final String ACTION_ID = "«EXPAND actionId(newVID)»"; //$NON-NLS-1$

	private static final int NEW_VID = «newVID»;

	«EXPAND xpt::Common::generatedMemberComment»
	public «EXPAND className(newVID)»(org.eclipse.ui.IWorkbenchPage workbenchPage, String actionId) {
		super(workbenchPage, actionId);
	}
	
	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	public void refresh() {
		super.refresh();
		setChecked(calculateChecked());
	}
	
	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	public boolean isEnabled() {
		org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart ep = getSelectedEditPart();
		return (ep == null) ? false : «EXPAND xpt::editor::VisualIDRegistry::getVisualIDMethodCall FOR getDiagram()»(ep.getNotationView()) != NEW_VID;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	public boolean calculateChecked() {
		org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart ep = getSelectedEditPart();
		return (ep == null) ? false : «EXPAND xpt::editor::VisualIDRegistry::getVisualIDMethodCall FOR getDiagram()»(ep.getNotationView()) == NEW_VID;
	}

	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	protected void updateText() {
		setText(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForChangeNotationActionText(changeNotationActionClassName(this, newVID))) FOR getDiagram().editorGen»);
		setText(«EXPAND xpt::Externalizer::accessorCall(i18nKeyForChangeNotationActionToolTipText(changeNotationActionClassName(this, newVID))) FOR getDiagram().editorGen»);
	}

	«EXPAND xpt::Common::generatedMemberComment»
	@Override
	protected String getSemanticHint(org.eclipse.gmf.runtime.diagram.ui.editparts.GraphicalEditPart editPart) {
		return String.valueOf(NEW_VID);
	}

}
«ENDDEFINE»
«DEFINE className(Integer vid) FOR gmfgen::GenTopLevelNode»«changeNotationActionClassName(this, vid)»«ENDDEFINE»

«DEFINE packageName FOR gmfgen::GenTopLevelNode»«getDiagram().editorGen.packageNamePrefix».action«ENDDEFINE»

«DEFINE qualifiedClassName(Integer newVID) FOR gmfgen::GenTopLevelNode»«EXPAND packageName».«EXPAND className(newVID)»«ENDDEFINE»

«DEFINE actionId(Integer newVID) FOR gmfgen::GenTopLevelNode»set_«newVID»_notation«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenDiagram-»
«EXPAND i18nAccessors FOREACH editorGen.diagram.topLevelNodes»
«ENDDEFINE»

«DEFINE i18nAccessors FOR gmfgen::GenTopLevelNode»
«LET viewmap.attributes.typeSelect(gmfgenext::SubstitutableByAttributes).first() AS subChild-»
«IF subChild != null && !subChild.requiresAll-»
«FOREACH subChild.substitutableByIDs AS id»«EXPAND i18nAccessors(id)»«ENDFOREACH-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE i18nAccessors(int vid) FOR gmfgen::GenTopLevelNode-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForChangeNotationActionText(changeNotationActionClassName(this, vid)))-»
«EXPAND xpt::Externalizer::accessorField(i18nKeyForChangeNotationActionToolTipText(changeNotationActionClassName(this, vid)))-»
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenDiagram-»
«EXPAND i18nValues FOREACH editorGen.diagram.topLevelNodes-»
«ENDDEFINE»

«DEFINE i18nValues FOR gmfgen::GenTopLevelNode-»
«LET viewmap.attributes.typeSelect(gmfgenext::SubstitutableByAttributes).first() AS subChild-»
«IF subChild != null && !subChild.requiresAll-»
«FOREACH subChild.substitutableByIDs AS id»«EXPAND i18nValues(id)»«ENDFOREACH-»
«ENDIF-»
«ENDLET-»
«ENDDEFINE»

«DEFINE i18nValues(int vid) FOR gmfgen::GenTopLevelNode-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForChangeNotationActionText(changeNotationActionClassName(this, vid)), "Set "+vid+" Notation")-»
«EXPAND xpt::Externalizer::messageEntry(i18nKeyForChangeNotationActionToolTipText(changeNotationActionClassName(this, vid)), "Set "+vid+" Notation")-»
«ENDDEFINE»
