/*
 * Copyright (c) 2008 Borland Software Corporation
 * 
 * Contributors:
 *		Alexander Shatalin (Borland) - initial API and implementation
 *		Michael Golubev (Borland) - #237272
 */

import "http://www.eclipse.org/gmf/2008/GenModel";
import "http://www.eclipse.org/emf/2002/GenModel";

extension xpt::diagram::editpolicies::LinkUtils;

List[gmfgen::TypeLinkModelFacet] getOutgoingLinksTypeModelFacets(gmfgen::GenNode node):
	node.getDiagram().links.select(link|canBeSource(link, node)).collect(link|link.modelFacet).typeSelect(gmfgen::TypeLinkModelFacet)
;

List[gmfgen::FeatureLinkModelFacet] getOutgoingLinksFeatureModelFacets(gmfgen::GenNode node):
	node.getDiagram().links.select(link|canBeSource(link, node)).collect(link|link.modelFacet).typeSelect(gmfgen::FeatureLinkModelFacet)
;

Set[genmodel::GenClass] getOutgoingLinkMetaclasses(gmfgen::GenNode node, genmodel::GenFeature containmentFeature):
	getOutgoingLinksTypeModelFacets(node).select(modelFacet|modelFacet.containmentMetaFeature == containmentFeature).collect(modelFacet|modelFacet.metaClass).toSet()
;

Set[genmodel::GenFeature] getOutgoingLinkTargetFeatures(gmfgen::GenNode node, genmodel::GenFeature containmentFeature, genmodel::GenClass metaClass):
	getOutgoingLinksTypeModelFacets(node).select(modelFacet|modelFacet.containmentMetaFeature == containmentFeature).select(modelFacet|modelFacet.metaClass == metaClass).collect(modelFacet|modelFacet.targetMetaFeature).toSet()
;

cached List[gmfgen::GenLink] getOutgoingAndContainedTypeLinks(gmfgen::GenNode node):
	node.getDiagram().links.select(link|canBeSource(link, node))
		.select(link | {link.modelFacet}.typeSelect(gmfgen::TypeLinkModelFacet).size() > 0)
		.select(link | ((gmfgen::TypeLinkModelFacet)link.modelFacet).childMetaFeature.ecoreFeature.eContainingClass.isSuperTypeOf(node.modelFacet.metaClass.ecoreClass))
;
