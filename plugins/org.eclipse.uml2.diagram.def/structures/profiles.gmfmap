<?xml version="1.0" encoding="UTF-8"?>
<gmfmap:Mapping xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore"
    xmlns:gmfmap="http://www.eclipse.org/gmf/2005/mappings/2.0"
    xmlns:gmftool="http://www.eclipse.org/gmf/2005/ToolDefinition">
  <nodes>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package/packagedElement"/>
    <childrenFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Profile/ownedStereotype"/>
    <ownedChild>
      <domainMetaElement
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Stereotype"/>
      <domainSpecialization
          body="generalization.general->forAll(e | e.oclIsKindOf(uml::Stereotype)) and&#xD;&#xA;generalization.specific->forAll(e | e.oclIsKindOf(uml::Stereotype))"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec"
            body="let base : String = 'Stereotype' in &#xD;&#xA;let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in  &#xD;&#xA;let space : Namespace = self.namespace in  &#xD;&#xA;let allMissed : Sequence(String) = suffixes-> &#x9;&#xD;&#xA;     select(s : String | not space.member->&#xD;&#xA;          exists(e : NamedElement | e.name = base.concat(s)) &#xD;&#xA;     ) in  &#xD;&#xA;let firstMissed : String = allMissed->first() in  &#xD;&#xA;let noMisses : Boolean = firstMissed.oclIsUndefined() in  &#xD;&#xA;let allNames : Set(String) =  &#x9;&#xD;&#xA;if noMisses &#xD;&#xA;then&#xD;&#xA;    space.member->collect(e : NamedElement | &#x9;&#x9;&#x9;&#xD;&#xA;         if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base &#x9;&#x9;&#x9;&#xD;&#xA;         then '' &#xD;&#xA;         else e.name &#x9;&#x9;&#x9;&#xD;&#xA;         endif&#xD;&#xA;    )->asSet()->excluding('') &#x9;&#x9;&#xD;&#xA;else Set{'not in use'} &#x9;&#x9;&#xD;&#xA;endif in  &#xD;&#xA;let longestName : String = &#x9;&#x9;&#xD;&#xA;   if noMisses &#x9;&#x9;&#xD;&#xA;   then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first()&#xD;&#xA;   else 'not in use' &#x9;&#x9;&#xD;&#xA;   endif &#x9;&#xD;&#xA;in  &#xD;&#xA;if noMisses then &#x9;&#x9;&#xD;&#xA;   if longestName.oclIsUndefined() &#xD;&#xA;   then base &#x9;&#x9;&#xD;&#xA;   else longestName.concat('1') &#xD;&#xA;   endif  &#xD;&#xA;else &#xD;&#xA;base.concat(firstMissed)  &#xD;&#xA;endif ">
          <feature
              xsi:type="ecore:EAttribute"
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          editPattern="">
        <diagramLabel
            href="profileDiagram_stereotype.gmfgraph#StereotypeNode_name"/>
        <features
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="profiles.gmftool#//@palette/@tools.0/@tools.1"/>
      <diagramNode
          href="profileDiagram_stereotype.gmfgraph#StereotypeNode"/>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//StructuredClassifier/ownedAttribute"/>
        <ownedChild>
          <domainMetaElement
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Property"/>
          <domainSpecialization
              body="self.association.oclIsUndefined() or not self.association.oclIsKindOf(uml::Extension)"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec"
                body="let base : String = 'property' in  let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in  let space : Namespace = self.namespace in  let allMissed : Sequence(String) = suffixes-> &#x9;select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s)) ) in  let firstMissed : String = allMissed->first() in  let noMisses : Boolean = firstMissed.oclIsUndefined() in  let allNames : Set(String) =  &#x9;if noMisses &#x9;&#x9;then &#x9;&#x9;space.member->collect(e : NamedElement | &#x9;&#x9;&#x9;if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base &#x9;&#x9;&#x9;then '' else e.name &#x9;&#x9;&#x9;endif &#x9;&#x9;)->asSet()->excluding('') &#x9;&#x9;else Set{'not in use'} &#x9;&#x9;endif in  let longestName : String = &#x9;&#x9;if noMisses &#x9;&#x9;then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first()&#x9;&#x9;else 'not in use' &#x9;&#x9;endif &#x9;in  if noMisses then &#x9;&#x9;if longestName.oclIsUndefined() &#x9;&#x9;then base &#x9;&#x9;else longestName.concat('1') &#x9;&#x9;endif  else base.concat(firstMissed)  endif ">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
            </initializers>
          </domainInitializer>
          <labelMappings>
            <diagramLabel
                href="classDiagram_auxiliary.gmfgraph#AuxiliaryPureLabel"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="profiles.gmftool#//@palette/@tools.1/@tools.2"/>
          <diagramNode
              href="classDiagram_auxiliary.gmfgraph#AuxiliaryPureLabel"/>
        </ownedChild>
      </children>
      <children
          compartment="//@nodes.0/@ownedChild/@compartments.1"
          referencedChild="//@nodes.0/@ownedChild/@children.1/@ownedChild">
        <containmentFeature
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Namespace/ownedRule"/>
        <ownedChild>
          <domainMetaElement
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Constraint"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec"
                body="let base : String = 'constraint' in  let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in  let space : Namespace = self.namespace in  let allMissed : Sequence(String) = suffixes-> &#x9;select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s)) ) in  let firstMissed : String = allMissed->first() in  let noMisses : Boolean = firstMissed.oclIsUndefined() in  let allNames : Set(String) =  &#x9;if noMisses &#x9;&#x9;then &#x9;&#x9;space.member->collect(e : NamedElement | &#x9;&#x9;&#x9;if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base &#x9;&#x9;&#x9;then '' else e.name &#x9;&#x9;&#x9;endif &#x9;&#x9;)->asSet()->excluding('') &#x9;&#x9;else Set{'not in use'} &#x9;&#x9;endif in  let longestName : String = &#x9;&#x9;if noMisses &#x9;&#x9;then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first()&#x9;&#x9;else 'not in use' &#x9;&#x9;endif &#x9;in  if noMisses then &#x9;&#x9;if longestName.oclIsUndefined() &#x9;&#x9;then base &#x9;&#x9;else longestName.concat('1') &#x9;&#x9;endif  else base.concat(firstMissed)  endif ">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
            </initializers>
          </domainInitializer>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              editPattern="">
            <diagramLabel
                href="classDiagram_auxiliary.gmfgraph#AuxiliaryPureLabel"/>
            <features
                href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="profiles.gmftool#//@palette/@tools.1/@tools.3"/>
          <diagramNode
              href="classDiagram_auxiliary.gmfgraph#AuxiliaryPureLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.0/@ownedChild/@children.0">
        <compartment
            href="profileDiagram_stereotype.gmfgraph#attributes"/>
      </compartments>
      <compartments
          children="//@nodes.0/@ownedChild/@children.1">
        <compartment
            href="profileDiagram_stereotype.gmfgraph#constraints"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package/packagedElement"/>
    <ownedChild>
      <domainMetaElement
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Profile"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec"
            body="let base : String = 'profile' in  let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in  let space : Namespace = self.namespace in  let allMissed : Sequence(String) = suffixes-> &#x9;select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s)) ) in  let firstMissed : String = allMissed->first() in  let noMisses : Boolean = firstMissed.oclIsUndefined() in  let allNames : Set(String) =  &#x9;if noMisses &#x9;&#x9;then &#x9;&#x9;space.member->collect(e : NamedElement | &#x9;&#x9;&#x9;if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base &#x9;&#x9;&#x9;then '' else e.name &#x9;&#x9;&#x9;endif &#x9;&#x9;)->asSet()->excluding('') &#x9;&#x9;else Set{'not in use'} &#x9;&#x9;endif in  let longestName : String = &#x9;&#x9;if noMisses &#x9;&#x9;then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first()&#x9;&#x9;else 'not in use' &#x9;&#x9;endif &#x9;in  if noMisses then &#x9;&#x9;if longestName.oclIsUndefined() &#x9;&#x9;then base &#x9;&#x9;else longestName.concat('1') &#x9;&#x9;endif  else base.concat(firstMissed)  endif ">
          <feature
              xsi:type="ecore:EAttribute"
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          editPattern="">
        <diagramLabel
            href="profileDiagram_profile.gmfgraph#ProfileNode_name"/>
        <features
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="profiles.gmftool#//@palette/@tools.0/@tools.0"/>
      <diagramNode
          href="profileDiagram_profile.gmfgraph#ProfileNode"/>
      <children
          compartment="//@nodes.1/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package/packagedElement"/>
        <ownedChild>
          <domainMetaElement
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Stereotype"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec"
                body="let base : String = 'stereotype' in  let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in  let space : Namespace = self.namespace in  let allMissed : Sequence(String) = suffixes-> &#x9;select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s)) ) in  let firstMissed : String = allMissed->first() in  let noMisses : Boolean = firstMissed.oclIsUndefined() in  let allNames : Set(String) =  &#x9;if noMisses &#x9;&#x9;then &#x9;&#x9;space.member->collect(e : NamedElement | &#x9;&#x9;&#x9;if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base &#x9;&#x9;&#x9;then '' else e.name &#x9;&#x9;&#x9;endif &#x9;&#x9;)->asSet()->excluding('') &#x9;&#x9;else Set{'not in use'} &#x9;&#x9;endif in  let longestName : String = &#x9;&#x9;if noMisses &#x9;&#x9;then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first()&#x9;&#x9;else 'not in use' &#x9;&#x9;endif &#x9;in  if noMisses then &#x9;&#x9;if longestName.oclIsUndefined() &#x9;&#x9;then base &#x9;&#x9;else longestName.concat('1') &#x9;&#x9;endif  else base.concat(firstMissed)  endif ">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
            </initializers>
          </domainInitializer>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping">
            <diagramLabel
                href="classDiagram_auxiliary.gmfgraph#AuxiliaryPureLabel"/>
            <features
                href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="profiles.gmftool#//@palette/@tools.0/@tools.1"/>
          <diagramNode
              href="classDiagram_auxiliary.gmfgraph#AuxiliaryPureLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.1/@ownedChild/@children.0">
        <compartment
            href="profileDiagram_profile.gmfgraph#contents"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package/packagedElement"/>
    <childrenFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package/ownedType"/>
    <ownedChild>
      <domainMetaElement
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Enumeration"/>
      <domainInitializer
          xsi:type="gmfmap:FeatureSeqInitializer">
        <initializers
            xsi:type="gmfmap:FeatureValueSpec"
            body=" let base : String = 'enumeration' in  let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in  let space : Namespace = self.namespace in  let allMissed : Sequence(String) = suffixes-> &#x9;select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s)) ) in  let firstMissed : String = allMissed->first() in  let noMisses : Boolean = firstMissed.oclIsUndefined() in  let allNames : Set(String) =  &#x9;if noMisses &#x9;&#x9;then &#x9;&#x9;space.member->collect(e : NamedElement | &#x9;&#x9;&#x9;if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base &#x9;&#x9;&#x9;then '' else e.name &#x9;&#x9;&#x9;endif &#x9;&#x9;)->asSet()->excluding('') &#x9;&#x9;else Set{'not in use'} &#x9;&#x9;endif in  let longestName : String = &#x9;&#x9;if noMisses &#x9;&#x9;then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first()&#x9;&#x9;else 'not in use' &#x9;&#x9;endif &#x9;in  if noMisses then &#x9;&#x9;if longestName.oclIsUndefined() &#x9;&#x9;then base &#x9;&#x9;else longestName.concat('1') &#x9;&#x9;endif  else base.concat(firstMissed)  endif ">
          <feature
              xsi:type="ecore:EAttribute"
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
        </initializers>
      </domainInitializer>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          editPattern="">
        <diagramLabel
            href="classDiagram_classifiers.gmfgraph#ClassNode_name"/>
        <features
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="profiles.gmftool#//@palette/@tools.1/@tools.0"/>
      <diagramNode
          href="classDiagram_classifiers.gmfgraph#ClassNode"/>
      <children
          compartment="//@nodes.2/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Enumeration/ownedLiteral"/>
        <ownedChild>
          <domainMetaElement
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//EnumerationLiteral"/>
          <domainInitializer
              xsi:type="gmfmap:FeatureSeqInitializer">
            <initializers
                xsi:type="gmfmap:FeatureValueSpec"
                body=" let base : String = 'enumerationLiteral' in  let suffixes : Sequence(String) = Sequence {'', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10'} in  let space : Namespace = self.namespace in  let allMissed : Sequence(String) = suffixes-> &#x9;select(s : String | not space.member->exists(e : NamedElement | e.name = base.concat(s)) ) in  let firstMissed : String = allMissed->first() in  let noMisses : Boolean = firstMissed.oclIsUndefined() in  let allNames : Set(String) =  &#x9;if noMisses &#x9;&#x9;then &#x9;&#x9;space.member->collect(e : NamedElement | &#x9;&#x9;&#x9;if e = self or e.name.oclIsUndefined() or e.name.substring(1, e.name.size().min(base.size())) &lt;> base &#x9;&#x9;&#x9;then '' else e.name &#x9;&#x9;&#x9;endif &#x9;&#x9;)->asSet()->excluding('') &#x9;&#x9;else Set{'not in use'} &#x9;&#x9;endif in  let longestName : String = &#x9;&#x9;if noMisses &#x9;&#x9;then allNames->select(n : String | not allNames->exists(nn : String | nn.size() > n.size()))->asSequence()->first()&#x9;&#x9;else 'not in use' &#x9;&#x9;endif &#x9;in  if noMisses then &#x9;&#x9;if longestName.oclIsUndefined() &#x9;&#x9;then base &#x9;&#x9;else longestName.concat('1') &#x9;&#x9;endif  else base.concat(firstMissed)  endif ">
              <feature
                  xsi:type="ecore:EAttribute"
                  href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
            </initializers>
          </domainInitializer>
          <labelMappings
              xsi:type="gmfmap:FeatureLabelMapping"
              editPattern="">
            <diagramLabel
                href="classDiagram_auxiliary.gmfgraph#AuxiliaryPureLabel"/>
            <features
                href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
          </labelMappings>
          <tool
              xsi:type="gmftool:CreationTool"
              href="profiles.gmftool#//@palette/@tools.1/@tools.4"/>
          <diagramNode
              href="classDiagram_auxiliary.gmfgraph#AuxiliaryPureLabel"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.2/@ownedChild/@children.0">
        <compartment
            href="classDiagram_classifiers.gmfgraph#literals"/>
      </compartments>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Namespace/elementImport"/>
    <childrenFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Profile/metaclassReference"/>
    <ownedChild>
      <domainMetaElement
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//ElementImport"/>
      <domainSpecialization
          body="self.importedElement.oclIsUndefined() or self.importedElement.oclAsType(uml::Class).isMetaclass()"/>
      <labelMappings>
        <diagramLabel
            href="profileDiagram_metaclasses.gmfgraph#ReferencedMetaclassNode_className"/>
      </labelMappings>
      <tool
          xsi:type="gmftool:CreationTool"
          href="profiles.gmftool#//@palette/@tools.0/@tools.2"/>
      <diagramNode
          href="profileDiagram_metaclasses.gmfgraph#ReferencedMetaclassNode"/>
    </ownedChild>
  </nodes>
  <nodes>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package/packagedElement"/>
    <ownedChild>
      <domainMetaElement
          href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Profile"/>
      <labelMappings
          xsi:type="gmfmap:FeatureLabelMapping"
          editPattern="">
        <diagramLabel
            href="profileDiagram_profile.gmfgraph#ProfileLabels_name"/>
        <features
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//NamedElement/name"/>
      </labelMappings>
      <diagramNode
          href="profileDiagram_profile.gmfgraph#ProfileLabelContainer"/>
      <children
          compartment="//@nodes.4/@ownedChild/@compartments.0">
        <containmentFeature
            href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Namespace/elementImport"/>
        <ownedChild>
          <domainMetaElement
              href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//ElementImport"/>
          <domainSpecialization
              body="let imported : NamedElement = self.importedElement in &#xD;&#xA;not imported.oclIsKindOf(Class) or not imported.oclAsType(Class).isMetaclass()&#xD;&#xA;"/>
          <labelMappings>
            <diagramLabel
                href="profileDiagram_profile.gmfgraph#ProfileLabelFigure_ImportedElement_name"/>
          </labelMappings>
          <diagramNode
              href="profileDiagram_profile.gmfgraph#ProfileLabelFigure_ImportedElement_name"/>
        </ownedChild>
      </children>
      <compartments
          children="//@nodes.4/@ownedChild/@children.0">
        <compartment
            href="profileDiagram_profile.gmfgraph#ProfileLabels"/>
      </compartments>
    </ownedChild>
  </nodes>
  <links>
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Generalization"/>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Classifier/generalization"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="profiles.gmftool#//@palette/@tools.1/@tools.1"/>
    <diagramLink
        href="../../../plugin/org.eclipse.gmf.graphdef/models/classDiagram.gmfgraph#SolidConnectionWDstClosedArrow"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Generalization/general"/>
  </links>
  <links>
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Extension"/>
    <labelMappings>
      <diagramLabel
          href="profileDiagram_links.gmfgraph#ExtensionLink_required"/>
    </labelMappings>
    <containmentFeature
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Package/packagedElement"/>
    <tool
        xsi:type="gmftool:CreationTool"
        href="profiles.gmftool#//@palette/@tools.0/@tools.3"/>
    <diagramLink
        href="profileDiagram_links.gmfgraph#ExtensionLink"/>
    <sourceMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Profile/ownedStereotype"/>
    <linkMetaFeature
        xsi:type="ecore:EReference"
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Profile/metaclassReference"/>
    <creationConstraints>
      <targetEnd
          body="let metaclass : Class = self.importedElement.oclAsType(Class) in&#xD;&#xA;metaclass.isMetaclass() and &#xD;&#xA;not oppositeEnd.getAllExtendedMetaclasses()->includes(metaclass)&#xD;&#xA;"/>
    </creationConstraints>
  </links>
  <diagram>
    <diagramCanvas
        href="../../../plugin/org.eclipse.gmf.graphdef/models/basic.gmfgraph#Surface"/>
    <domainModel
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#/"/>
    <domainMetaElement
        href="../../../plugin/org.eclipse.uml2.uml/model/UML.ecore#//Profile"/>
    <palette
        href="profiles.gmftool#//@palette"/>
  </diagram>
</gmfmap:Mapping>
